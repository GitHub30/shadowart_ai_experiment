/*
 * Copyright 2018 Google LLC
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     https://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
function getLunarYear(y, m, d) {
  var year = y;
  var month = m;
  var day = d;
  var hour = 1;

  var date;
  date = year.toString() + "-";
  
  if (month < 10) {
	date += "0";
  }
  date += month.toString() + "-";

  if (day < 10) {
	date += "0";
  }
  date += day.toString() + "T";

  if (hour < 10) {
	date += "0";
  }
  date += hour.toString() + ":00:00.000Z";
  
  time = Date.parse(date);
  
  var lookup_table = [[-2216592000000, 76, 36], [-2206396800000, 76, 37], [-2173219200000, 76, 38], [-2142633600000, 76, 39], [-2111961600000, 76, 40], [-2078870400000, 76, 41], [-2048284800000, 76, 42], [-2017612800000, 76, 43], [-1984435200000, 76, 44], [-1953849600000, 76, 45], [-1923177600000, 76, 46], [-1890000000000, 76, 47], [-1859414400000, 76, 48], [-1826236800000, 76, 49], [-1795651200000, 76, 50], [-1765065600000, 76, 51], [-1731888000000, 76, 52], [-1701302400000, 76, 53], [-1670630400000, 76, 54], [-1637452800000, 76, 55], [-1606780800000, 76, 56], [-1573603200000, 76, 57], [-1543017600000, 76, 58], [-1512432000000, 76, 59], [-1479254400000, 76, 60], [-1448668800000, 77, 1], [-1418083200000, 77, 2], [-1384819200000, 77, 3], [-1354233600000, 77, 4], [-1323561600000, 77, 5], [-1290384000000, 77, 6], [-1259798400000, 77, 7], [-1226707200000, 77, 8], [-1196121600000, 77, 9], [-1165449600000, 77, 10], [-1132272000000, 77, 11], [-1101600000000, 77, 12], [-1071014400000, 77, 13], [-1037836800000, 77, 14], [-1007251200000, 77, 15], [-974073600000, 77, 16], [-943488000000, 77, 17], [-912902400000, 77, 18], [-879724800000, 77, 19], [-849052800000, 77, 20], [-818467200000, 77, 21], [-785203200000, 77, 22], [-754617600000, 77, 23], [-724032000000, 77, 24], [-690854400000, 77, 25], [-660268800000, 77, 26], [-627091200000, 77, 27], [-596505600000, 77, 28], [-565833600000, 77, 29], [-532656000000, 77, 30], [-502070400000, 77, 31], [-471398400000, 77, 32], [-438220800000, 77, 33], [-407635200000, 77, 34], [-374544000000, 77, 35], [-343872000000, 77, 36], [-313286400000, 77, 37], [-280108800000, 77, 38], [-249436800000, 77, 39], [-218851200000, 77, 40], [-185673600000, 77, 41], [-155001600000, 77, 42], [-124502400000, 77, 43], [-91324800000, 77, 44], [-60652800000, 77, 45], [-27475200000, 77, 46], [3110400000, 77, 47], [33782400000, 77, 48], [66960000000, 77, 49], [97545600000, 77, 50], [128131200000, 77, 51], [161308800000, 77, 52], [191894400000, 77, 53], [225072000000, 77, 54], [255657600000, 77, 55], [286329600000, 77, 56], [319507200000, 77, 57], [350179200000, 77, 58], [380764800000, 77, 59], [413942400000, 77, 60], [444528000000, 78, 1], [477705600000, 78, 2], [508291200000, 78, 3], [538876800000, 78, 4], [572054400000, 78, 5], [602726400000, 78, 6], [633398400000, 78, 7], [666576000000, 78, 8], [697161600000, 78, 9], [727747200000, 78, 10], [760838400000, 78, 11], [791510400000, 78, 12], [824688000000, 78, 13], [855273600000, 78, 14], [885945600000, 78, 15], [919123200000, 78, 16], [949708800000, 78, 17], [980294400000, 78, 18], [1013472000000, 78, 19], [1044057600000, 78, 20], [1074729600000, 78, 21], [1107907200000, 78, 22], [1138492800000, 78, 23], [1171756800000, 78, 24], [1202342400000, 78, 25], [1232928000000, 78, 26], [1266105600000, 78, 27], [1296691200000, 78, 28], [1327276800000, 78, 29], [1360454400000, 78, 30], [1391126400000, 78, 31], [1424304000000, 78, 32], [1454889600000, 78, 33], [1485561600000, 78, 34], [1518739200000, 78, 35], [1549324800000, 78, 36], [1579910400000, 78, 37], [1613088000000, 78, 38], [1643673600000, 78, 39], [1674345600000, 78, 40], [1707523200000, 78, 41], [1738108800000, 78, 42], [1771286400000, 78, 43], [1801872000000, 78, 44], [1832457600000, 78, 45], [1865635200000, 78, 46], [1896307200000, 78, 47], [1926892800000, 78, 48], [1960070400000, 78, 49], [1990742400000, 78, 50], [2023920000000, 78, 51], [2054505600000, 78, 52], [2085091200000, 78, 53], [2118268800000, 78, 54], [2148854400000, 78, 55], [2179440000000, 78, 56], [2212617600000, 78, 57], [2243289600000, 78, 58], [2273961600000, 78, 59], [2307139200000, 78, 60], [2337724800000, 79, 1], [2370902400000, 79, 2], [2401488000000, 79, 3], [2432073600000, 79, 4], [2465251200000, 79, 5], [2495836800000, 79, 6], [2526508800000, 79, 7], [2559686400000, 79, 8], [2590358400000, 79, 9], [2623536000000, 79, 10], [2654121600000, 79, 11], [2684707200000, 79, 12], [2717798400000, 79, 13], [2748470400000, 79, 14], [2779056000000, 79, 15], [2812233600000, 79, 16], [2842905600000, 79, 17], [2873491200000, 79, 18], [2906668800000, 79, 19], [2937254400000, 79, 20], [2970432000000, 79, 21], [3001017600000, 79, 22], [3031689600000, 79, 23], [3064867200000, 79, 24], [3095452800000, 79, 25], [3126124800000, 79, 26], [3159302400000, 79, 27], [3189888000000, 79, 28], [3223065600000, 79, 29], [3253651200000, 79, 30], [3284236800000, 79, 31], [3317414400000, 79, 32], [3348086400000, 79, 33], [3378672000000, 79, 34], [3411849600000, 79, 35], [3442521600000, 79, 36], [3473107200000, 79, 37], [3506284800000, 79, 38], [3536870400000, 79, 39], [3570048000000, 79, 40], [3600633600000, 79, 41], [3631305600000, 79, 42], [3664483200000, 79, 43], [3695068800000, 79, 44], [3725740800000, 79, 45], [3758832000000, 79, 46], [3789417600000, 79, 47], [3822595200000, 79, 48], [3853180800000, 79, 49], [3883852800000, 79, 50], [3917030400000, 79, 51], [3947702400000, 79, 52], [3978288000000, 79, 53], [4011465600000, 79, 54], [4042051200000, 79, 55], [4072636800000, 79, 56]];

  current_data = null;
  
  for (i = 1; i < lookup_table.length; i++) {
	  
	data = lookup_table[i];
	if (time < data[0]) {
	  days_diff = Math.floor((i - current_data[0]) / (24 * 60 * 60 * 1000));
	  epoch = current_data[1];
	  year_in_epoch = current_data[2];	  
	  lunar_year = 60 * epoch + year_in_epoch + 1;
	  
	  return lunar_year;
	}
	else
		current_data = data;
  }
  
  return 0;
}

function getAnimalIndex(y, m, d)
{
	return (getLunarYear(y,m,d)+10)%12;
}

function getAnimalName(y, m, d)
{
	let zodiac_animal_list = ["Rat", "Ox", "Tiger", "Rabbit", "Dragon", "Snake", "Horse", "Goat", "Monkey", "Rooster", "Dog", "Pig"];
	return zodiac_animal_list[getAnimalIndex(y,m,d)]
}

